# docker-compose.yml (最终版)

services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql-saas-db
    restart: always
    environment:
      MYSQL_DATABASE: 'collaborative_office'
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: 'a_very_strong_and_random_password_!@#$'
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # 身份认证服务
  identity-service:
    container_name: identity-service
    build:
      context: .
      dockerfile: CollaborativeOffice.IdentityService/Dockerfile
    restart: always
    ports:
      - "7001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=mysql-db;Port=3306;Database=collaborative_office;Uid=${DB_USER};Pwd=${DB_PASSWORD};
      - Jwt__Key=${JWT_KEY}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
    depends_on:
      mysql-db:
        condition: service_healthy

  # 项目服务
  project-service:
    container_name: project-service
    build:
      context: .
      dockerfile: CollaborativeOffice.ProjectService/Dockerfile
    restart: always
    ports:
      - "7002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=mysql-db;Port=3306;Database=collaborative_office;Uid=${DB_USER};Pwd=${DB_PASSWORD};
      - Jwt__Key=${JWT_KEY}
      - Jwt__Issuer=${JWT_ISSUER}
      - Jwt__Audience=${JWT_AUDIENCE}
    depends_on:
      mysql-db:
        condition: service_healthy

  # API网关服务
  gateway-service:
    container_name: gateway-service
    build:
      context: .
      dockerfile: CollaborativeOffice.Gateway/Dockerfile
    restart: always
    ports:
      - "7077:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      - identity-service
      - project-service

  # 前端服务
  frontend-service:
    container_name: frontend-service
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5173:80"
    depends_on:
      - gateway-service

# 定义数据卷
volumes:
  mysql-data:
